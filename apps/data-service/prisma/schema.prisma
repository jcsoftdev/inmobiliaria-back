generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model agencies {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  address      String?
  phone        String?        @db.VarChar(20)
  email        String         @unique @db.VarChar(100)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  cash_flow    cash_flow[]
  properties   properties[]
  sellers      sellers[]
  transactions transactions[]
  users        users[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model cash_flow {
  id                  Int           @id @default(autoincrement())
  agency_id           Int?
  transaction_id      Int?
  user_id             Int?
  parent_cash_flow_id Int?
  type                String?       @db.VarChar(20)
  amount              Decimal       @db.Decimal(12, 2)
  description         String?
  date                DateTime?     @default(now()) @db.Timestamp(6)
  agencies            agencies?     @relation(fields: [agency_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  cash_flow           cash_flow?    @relation("cash_flowTocash_flow", fields: [parent_cash_flow_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_cash_flow     cash_flow[]   @relation("cash_flowTocash_flow")
  transactions        transactions? @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users               users?        @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model clients {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(100)
  email                 String                  @unique @db.VarChar(100)
  phone                 String?                 @db.VarChar(20)
  created_at            DateTime?               @default(now()) @db.Timestamp(6)
  leads                 leads[]
  property_transactions property_transactions[]
  visits                visits[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model leads {
  id          Int         @id @default(autoincrement())
  client_id   Int?
  property_id Int?
  message     String?
  status      String?     @default("new") @db.VarChar(20)
  created_at  DateTime?   @default(now()) @db.Timestamp(6)
  clients     clients?    @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  properties  properties? @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model properties {
  id                    Int                     @id @default(autoincrement())
  agency_id             Int?
  title                 String                  @db.VarChar(255)
  description           String?
  type                  String?                 @db.VarChar(20)
  price                 Decimal                 @db.Decimal(12, 2)
  location              Json
  features              Json
  status                String?                 @default("available") @db.VarChar(20)
  user_id               Int?
  created_at            DateTime?               @default(now()) @db.Timestamp(6)
  leads                 leads[]
  agencies              agencies?               @relation(fields: [agency_id], references: [id], onUpdate: NoAction)
  users                 users?                  @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  property_images       property_images[]
  property_transactions property_transactions[]
  visits                visits[]
}

model property_images {
  id          Int         @id @default(autoincrement())
  property_id Int?
  image_url   String
  created_at  DateTime?   @default(now()) @db.Timestamp(6)
  properties  properties? @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model property_transactions {
  id             Int           @id @default(autoincrement())
  property_id    Int?
  buyer_id       Int?
  seller_id      Int?
  transaction_id Int?
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  clients        clients?      @relation(fields: [buyer_id], references: [id], onUpdate: NoAction)
  properties     properties?   @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sellers        sellers?      @relation(fields: [seller_id], references: [id], onUpdate: NoAction)
  transactions   transactions? @relation(fields: [transaction_id], references: [id], onUpdate: NoAction)
}

model sellers {
  id                    Int                     @id @default(autoincrement())
  agency_id             Int?
  user_id               Int?                    @unique
  created_at            DateTime?               @default(now()) @db.Timestamp(6)
  property_transactions property_transactions[]
  agencies              agencies?               @relation(fields: [agency_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                 users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  id                    Int                     @id @default(autoincrement())
  agency_id             Int?
  amount                Decimal                 @db.Decimal(12, 2)
  transaction_date      DateTime?               @default(now()) @db.Timestamp(6)
  transaction_type      String?                 @db.VarChar(20)
  description           String?
  created_at            DateTime?               @default(now()) @db.Timestamp(6)
  cash_flow             cash_flow[]
  property_transactions property_transactions[]
  agencies              agencies?               @relation(fields: [agency_id], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id         Int          @id @default(autoincrement())
  agency_id  Int?
  name       String       @db.VarChar(100)
  email      String       @unique @db.VarChar(100)
  password   String
  phone      String?      @db.VarChar(20)
  role       String?      @db.VarChar(20)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  cash_flow  cash_flow[]
  properties properties[]
  sellers    sellers?
  agencies   agencies?    @relation(fields: [agency_id], references: [id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model visits {
  id           Int         @id @default(autoincrement())
  client_id    Int?
  property_id  Int?
  scheduled_at DateTime    @db.Timestamp(6)
  status       String?     @default("pending") @db.VarChar(20)
  created_at   DateTime?   @default(now()) @db.Timestamp(6)
  clients      clients?    @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  properties   properties? @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
